local Rayfield = loadstring(game:HttpGet("https://sirius.menu/rayfield"))()

-- Stato interno
local insideCastle = false
local autoRestartPortal -- sar√† inizializzato dal toggle

local ReplicatedStorage = game:GetService("ReplicatedStorage")
local dataRemoteEvent = ReplicatedStorage:WaitForChild("BridgeNet2"):WaitForChild("dataRemoteEvent")

-- GUI con nome personalizzato
local Window = Rayfield:CreateWindow({
    Name = "xnxsmoke Hub",
    LoadingTitle = "xnxsmoke Loader",
    LoadingSubtitle = "by xnxsmoke",
    ConfigurationSaving = {
        Enabled = true,
        FileName = "InfiniteCastleHub",
        AutoSave = true
    },
})

-- Tab per Infinite Castle
local CastleTab = Window:CreateTab("InfCastle", 4483362458)

-- NUOVA tab per InfDesert
local DesertTab = Window:CreateTab("InfDesert", 4483362458)

-- Toggle auto-restart portal
local PortalToggle = CastleTab:CreateToggle({
    Name = "Auto-Restart alla distruzione del portale",
    CurrentValue = false,
    Flag = "AutoRestartPortalFlag",
    Callback = function(Value)
        autoRestartPortal = Value
        if Value then
            Rayfield:Notify({Title="Auto-Restart", Content="Attivato!", Duration=3})
        else
            Rayfield:Notify({Title="Auto-Restart", Content="Disattivato!", Duration=3})
        end
    end,
})

-- Toggle Stand in the Middle (solo dentro InfCastle)
local middleCFrame = CFrame.new(Vector3.new(432.6329, 4384.6372, -1898.6741))

local StandToggle
StandToggle = CastleTab:CreateToggle({
    Name = "Stand in the Middle",
    CurrentValue = false,
    Flag = "StandInMiddleFlag",
    Callback = function(Value)
        if Value then
            if not insideCastle then
                -- Se siamo fuori dal castello, non teletrasportare
                Rayfield:Notify({
                    Title = "Stand in the Middle",
                    Content = "Funziona solo dentro l'InfCastle!",
                    Duration = 3
                })
                return
            end

            -- Teletrasporto al centro solo se siamo dentro
            local player = game.Players.LocalPlayer
            if player and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                player.Character.HumanoidRootPart.CFrame = middleCFrame
                Rayfield:Notify({
                    Title = "Stand in the Middle",
                    Content = "Sei stato teletrasportato al centro!",
                    Duration = 3
                })
            end
        end
    end,
})

-- Carica la configurazione dopo aver creato GUI e toggle
Rayfield:LoadConfiguration("InfiniteCastleHub")

-- Funzioni principali
local function startInfiniteCastle()
    if insideCastle then return end
    local createArgs = {{ { Event = "InfiniteCastleAction", Action = "Create" }, "\r" }}
    dataRemoteEvent:FireServer(unpack(createArgs))
    wait(2)
    local startArgs = {{ { Dungeon = 3604563306, Event = "InfiniteCastleAction", Action = "Start" }, "\r" }}
    dataRemoteEvent:FireServer(unpack(startArgs))
    insideCastle = true
    print("Castello avviato")

    wait(3)
    -- Teleport automatico al centro del castello
    local player = game.Players.LocalPlayer
    if player and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
        player.Character.HumanoidRootPart.CFrame = middleCFrame
    end
end

local function restartCastle()
    if not insideCastle then return end
    local leaveArgs = {{ { Event = "InfiniteCastleAction", Action = "Leave" }, "\r" }}
    dataRemoteEvent:FireServer(unpack(leaveArgs))
    insideCastle = false
    print("Castello riavviato")
end

-- Monitor portal destroyed
dataRemoteEvent.OnClientEvent:Connect(function(...)
    if autoRestartPortal ~= true then return end
    local args = {...}
    local function checkTable(tbl)
        if type(tbl) ~= "table" then return end
        for k, val in pairs(tbl) do
            if type(val) == "table" then
                checkTable(val)
            elseif k == "Message" and tostring(val):upper():find("PORTAL DESTROYED") then
                print("Portale distrutto rilevato! Riavvio castello...")
                restartCastle()
                wait(3)
                startInfiniteCastle()
            end
        end
    end
    for _, v in ipairs(args) do
        checkTable(v)
    end
end)

-- Pulsanti manuali per Castle
CastleTab:CreateButton({
    Name = "Avvia InfCastle Manuale",
    Callback = function() startInfiniteCastle() end,
    Flag = "StartManualFlag"
})

CastleTab:CreateButton({
    Name = "Riavvia InfCastle Manuale",
    Callback = function() restartCastle() end,
    Flag = "RestartManualFlag"
})

-- Placeholder per InfDesert
DesertTab:CreateParagraph({
    Title = "Work in Progress",
    Content = "Qui aggiungeremo i controlli per InfDesert."
})
