local Rayfield = loadstring(game:HttpGet("https://sirius.menu/rayfield"))()
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")
local player = Players.LocalPlayer
local dataRemoteEvent = ReplicatedStorage:WaitForChild("BridgeNet2"):WaitForChild("dataRemoteEvent")

-- Coordinates
local castleCFrame = CFrame.new(432.6329, 4384.6372, -1898.6741)
local desertCFrame = CFrame.new(463.8988, 4383.7646, -1888.2440)

-- Window
local Window = Rayfield:CreateWindow({
    Name = "xnxsmoke Hub",
    LoadingTitle = "xnxsmoke Loader",
    LoadingSubtitle = "by xnxsmoke",
    ConfigurationSaving = { Enabled = true, FileName = "InfiniteModesHub", AutoSave = true },
})

local CastleTab = Window:CreateTab("InfCastle", 4483362458)
local DesertTab = Window:CreateTab("InfDesert", 4483362458)

-- Helpers
local function standAt(cframe)
    local char = player.Character
    if char and char:FindFirstChild("HumanoidRootPart") then
        char.HumanoidRootPart.CFrame = cframe
    end
end

local startingDungeon = false
local standCastleEnabled = false
local standDesertEnabled = false

-- INFCASTLE
CastleTab:CreateButton({
    Name = "Start Infinite Castle (Manual)",
    Callback = function()
        if startingDungeon then return end
        startingDungeon = true
        local argsCreate = { { { Event = "InfiniteCastleAction", Action = "Create" }, "\r" } }
        dataRemoteEvent:FireServer(unpack(argsCreate))
        task.wait(1)
        local argsStart = { { { Dungeon = 3604563306, Event = "InfiniteCastleAction", Action = "Start" }, "\r" } }
        dataRemoteEvent:FireServer(unpack(argsStart))
        print("Infinite Castle started")
        startingDungeon = false
    end
})

CastleTab:CreateToggle({
    Name = "Stand in the Middle (Use only in InfCastle)",
    CurrentValue = false,
    Flag = "StandCastleFlag",
    Callback = function(Value) standCastleEnabled = Value end
})

-- INFDESERT
DesertTab:CreateButton({
    Name = "Start Infinite Desert (Manual)",
    Callback = function()
        if startingDungeon then return end
        startingDungeon = true
        local argsCreate = { { { Event = "InfiniteModeAction", Action = "Create" }, "\r" } }
        dataRemoteEvent:FireServer(unpack(argsCreate))
        task.wait(1)
        local argsStart = { { { Dungeon = 3604563306, Event = "InfiniteModeAction", Action = "Start" }, "\r" } }
        dataRemoteEvent:FireServer(unpack(argsStart))
        print("Infinite Desert started")
        startingDungeon = false
    end
})

DesertTab:CreateToggle({
    Name = "Stand in the Middle (Use only in InfDesert)",
    CurrentValue = false,
    Flag = "StandDesertFlag",
    Callback = function(Value) standDesertEnabled = Value end
})

-- Stand loop
task.spawn(function()
    while true do
        task.wait(0.3)
        if standCastleEnabled then
            standAt(castleCFrame)
        elseif standDesertEnabled then
            standAt(desertCFrame)
        end
    end
end)

-- Auto reposition on respawn
player.CharacterAdded:Connect(function()
    task.wait(1)
    if standCastleEnabled then
        standAt(castleCFrame)
    elseif standDesertEnabled then
        standAt(desertCFrame)
    end
end)

Rayfield:LoadConfiguration("InfiniteModesHub")
