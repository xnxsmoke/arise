local Rayfield = loadstring(game:HttpGet("https://sirius.menu/rayfield"))()

local ReplicatedStorage = game:GetService("ReplicatedStorage")
local dataRemoteEvent = ReplicatedStorage:WaitForChild("BridgeNet2"):WaitForChild("dataRemoteEvent")
local Players = game:GetService("Players")
local player = Players.LocalPlayer

local Window = Rayfield:CreateWindow({
    Name = "xnxsmoke Hub",
    LoadingTitle = "xnxsmoke Loader",
    LoadingSubtitle = "by xnxsmoke",
    ConfigurationSaving = {
        Enabled = true,
        FileName = "InfiniteCastleHub",
        AutoSave = true
    },
})

local CastleTab = Window:CreateTab("InfCastle", 4483362458)
local DesertTab = Window:CreateTab("InfDesert", 4483362458)

local autoRestartPortal = false
CastleTab:CreateToggle({
    Name = "Auto-Restart on Portal Destroyed",
    CurrentValue = false,
    Flag = "AutoRestartPortalFlag",
    Callback = function(Value)
        autoRestartPortal = Value
        Rayfield:Notify({
            Title = "Auto-Restart",
            Content = Value and "Enabled!" or "Disabled!",
            Duration = 3
        })
    end
})

local middleCFrame = CFrame.new(432.6329, 4384.6372, -1898.6741)
local StandToggle = CastleTab:CreateToggle({
    Name = "Stand in the Middle (use only in InfCastle)",
    CurrentValue = false,
    Flag = "StandInMiddleFlag",
    Callback = function(Value)
        if Value then
            Rayfield:Notify({
                Title = "Stand in the Middle",
                Content = "Enabled!",
                Duration = 3
            })
        else
            Rayfield:Notify({
                Title = "Stand in the Middle",
                Content = "Disabled.",
                Duration = 3
            })
        end
    end
})

local insideCastle = false

local function startInfiniteCastle()
    local createArgs = {{ { Event = "InfiniteCastleAction", Action = "Create" }, "\r" }}
    dataRemoteEvent:FireServer(unpack(createArgs))
    wait(2)
    local startArgs = {{ { Dungeon = 3604563306, Event = "InfiniteCastleAction", Action = "Start" }, "\r" }}
    dataRemoteEvent:FireServer(unpack(startArgs))
    insideCastle = true
    print("Infinite Castle started")
end

local function restartCastle()
    local leaveArgs = {{ { Event = "InfiniteCastleAction", Action = "Leave" }, "\r" }}
    dataRemoteEvent:FireServer(unpack(leaveArgs))
    insideCastle = false
    print("Infinite Castle restarted")
end

dataRemoteEvent.OnClientEvent:Connect(function(...)
    if not autoRestartPortal then return end
    local args = {...}
    local function checkTable(tbl)
        if type(tbl) ~= "table" then return end
        for k,v in pairs(tbl) do
            if type(v) == "table" then
                checkTable(v)
            elseif k == "Message" and tostring(v):upper():find("PORTAL DESTROYED") then
                print("Portal destroyed! Restarting castle...")
                restartCastle()
                wait(3)
                startInfiniteCastle()
            end
        end
    end
    for _,v in ipairs(args) do
        checkTable(v)
    end
end)

CastleTab:CreateButton({
    Name = "Start Infinite Castle (Manual)",
    Callback = function() startInfiniteCastle() end,
    Flag = "StartManualFlag"
})

spawn(function()
    while true do
        wait(0.1)
        if StandToggle:Get() and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            player.Character.HumanoidRootPart.CFrame = middleCFrame
        end
    end
end)

player.CharacterAdded:Connect(function(char)
    wait(0.5)
    if StandToggle:Get() and char:FindFirstChild("HumanoidRootPart") then
        char.HumanoidRootPart.CFrame = middleCFrame
    end
end)

DesertTab:CreateParagraph({
    Title = "Work in Progress",
    Content = "Controls for InfDesert will be added here."
})

Rayfield:LoadConfiguration("InfiniteCastleHub")
