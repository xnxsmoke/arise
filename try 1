local Rayfield = loadstring(game:HttpGet("https://sirius.menu/rayfield"))()

-- Stato interno
local insideCastle = false
local autoRestartPortal = false

local ReplicatedStorage = game:GetService("ReplicatedStorage")
local dataRemoteEvent = ReplicatedStorage:WaitForChild("BridgeNet2"):WaitForChild("dataRemoteEvent")

-- Funzioni principali
local function startInfiniteCastle()
    if insideCastle then return end

    local createArgs = {{ { Event = "InfiniteCastleAction", Action = "Create" }, "\r" }}
    dataRemoteEvent:FireServer(unpack(createArgs))
    wait(2)

    local startArgs = {{ { Dungeon = 3604563306, Event = "InfiniteCastleAction", Action = "Start" }, "\r" }}
    dataRemoteEvent:FireServer(unpack(startArgs))

    insideCastle = true
    print("Castello avviato")
end

local function restartCastle()
    if not insideCastle then return end

    local leaveArgs = {{ { Event = "InfiniteCastleAction", Action = "Leave" }, "\r" }}
    dataRemoteEvent:FireServer(unpack(leaveArgs))

    insideCastle = false
    print("Castello riavviato")
end

-- Monitor portal destroyed
dataRemoteEvent.OnClientEvent:Connect(function(...)
    if not autoRestartPortal then return end
    local args = {...}
    local function checkTable(tbl)
        if type(tbl) ~= "table" then return end
        for k, val in pairs(tbl) do
            if type(val) == "table" then
                checkTable(val)
            elseif k == "Message" and tostring(val):upper():find("PORTAL DESTROYED") then
                print("Portale distrutto rilevato! Riavvio castello...")
                restartCastle()
                wait(3)
                startInfiniteCastle()
            end
        end
    end
    for _, v in ipairs(args) do
        checkTable(v)
    end
end)

-- GUI completa con toggle, slider e pulsanti
local Window = Rayfield:CreateWindow({
    Name = "InfiniteCastle Hub",
    LoadingTitle = "InfiniteCastle Loader",
    LoadingSubtitle = "by xnxsmoke",
    ConfigurationSaving = {
        Enabled = true,
        FileName = "InfiniteCastleHub",
        AutoSave = true
    },
})

local MainTab = Window:CreateTab("Main", 4483362458)

-- Toggle auto-restart portal con flag per salvataggio
local PortalToggle = MainTab:CreateToggle({
    Name = "Auto-Restart alla distruzione del portale",
    CurrentValue = false,
    Flag = "AutoRestartPortalFlag", -- necessario per il salvataggio
    Callback = function(Value)
        autoRestartPortal = Value
        if Value then
            Rayfield:Notify({Title="Auto-Restart", Content="Attivato!", Duration=3})
        else
            Rayfield:Notify({Title="Auto-Restart", Content="Disattivato!", Duration=3})
        end
    end,
})

-- Pulsante manuale per avviare il castello
MainTab:CreateButton({
    Name = "Avvia InfCastle Manuale",
    Callback = function()
        startInfiniteCastle()
    end
})

-- Pulsante manuale per riavviare il castello
MainTab:CreateButton({
    Name = "Riavvia InfCastle Manuale",
    Callback = function()
        restartCastle()
    end
})
