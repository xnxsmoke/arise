local Rayfield = loadstring(game:HttpGet("https://sirius.menu/rayfield"))()
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")
local player = Players.LocalPlayer
local dataRemoteEvent = ReplicatedStorage:WaitForChild("BridgeNet2"):WaitForChild("dataRemoteEvent")

local castleCFrame = CFrame.new(432.6329, 4384.6372, -1898.6741)
local desertCFrame = CFrame.new(463.8988, 4383.7646, -1888.2440)
local bossRushCFrame = CFrame.new(216.035507, 1594.49414, -4315.56738, 0.861163139, -4.20389539e-45, -0.508328736, 1.12103877e-44, 1, 1.12103877e-44, 0.508328736, -1.54142831e-44, 0.861163139)

local Window = Rayfield:CreateWindow({
    Name = "xnxsmoke Hub",
    LoadingTitle = "xnxsmoke Loader",
    LoadingSubtitle = "by xnxsmoke",
    ConfigurationSaving = { Enabled = true, FileName = "InfiniteModesHub", AutoSave = true },
})

local CastleTab = Window:CreateTab("InfCastle", 4483362458)
local DesertTab = Window:CreateTab("InfDesert", 4483362458)
local LabTab = Window:CreateTab("InfLab", 4483362458)
local BossRushTab = Window:CreateTab("Boss Rush", 4483362458)
local MiscTab = Window:CreateTab("Misc", 4483362458)

-- Variabili generali
local standCastleEnabled, standDesertEnabled, standBossRushEnabled = false, false, false
local autoRestartCastle, autoRestartDesert, autoRestartLabyrinth = false, false, false
local waveSpeed2DesertEnabled, waveSpeed3DesertEnabled = false, false

-- Utility
local function safeStandAt(cf)
    local char = player.Character
    if char and char:FindFirstChild("HumanoidRootPart") then
        pcall(function() char.HumanoidRootPart.CFrame = cf end)
    end
end

local function fireSafe(args)
    pcall(function() dataRemoteEvent:FireServer(unpack(args)) end)
end

local function safeRejoin(joinFunction)
    task.spawn(function()
        local success = false
        for i = 1, 5 do
            task.wait(math.random(3, 6))
            local ok, err = pcall(joinFunction)
            if ok then
                success = true
                break
            else
                warn("[AutoRejoin] Errore:", err)
            end
        end
        if not success then
            warn("[AutoRejoin] Non riuscito dopo 5 tentativi.")
        end
    end)
end

-- ========== InfCastle ==========
local function startCastle()
    fireSafe({ { { Event = "InfiniteCastleAction", Action = "Create" }, "\014" } })
    task.wait(1)
    fireSafe({ { { Dungeon = 3604563306, Event = "InfiniteCastleAction", Action = "Start" }, "\014" } })
    task.wait(1)
    if standCastleEnabled then safeStandAt(castleCFrame) end
end

local function restartCastle()
    safeRejoin(startCastle)
end

CastleTab:CreateButton({ Name = "Start Infinite Castle (Manual)", Callback = startCastle })
CastleTab:CreateToggle({
    Name = "Stand in the Middle (InfCastle)",
    CurrentValue = false,
    Flag = "StandCastleFlag",
    Callback = function(v)
        standCastleEnabled = v
        if v then safeStandAt(castleCFrame) end
    end
})
CastleTab:CreateToggle({
    Name = "Auto-Restart (on Portal Destroyed)",
    CurrentValue = false,
    Flag = "AutoRestartCastleFlag",
    Callback = function(v) autoRestartCastle = v end
})
CastleTab:CreateToggle({
    Name = "Wave Speed 3",
    CurrentValue = false,
    Flag = "WaveSpeed3CastleFlag",
    Callback = function(v)
        if v then
            task.spawn(function()
                task.wait(5)
                fireSafe({ { { Speed = 3, Event = "InfiniteCastleAction", Action = "SpeedUp" }, "\014" } })
            end)
        end
    end
})

-- ========== InfDesert ==========
local function startDesert()
    fireSafe({ { { Event = "InfiniteModeAction", Action = "Create" }, "\014" } })
    task.wait(1)
    fireSafe({ { { Dungeon = 3604563306, Event = "InfiniteModeAction", Action = "Start" }, "\014" } })
    task.wait(1)
    if standDesertEnabled then safeStandAt(desertCFrame) end
end

local function restartDesert()
    safeRejoin(startDesert)
end

DesertTab:CreateButton({ Name = "Start Infinite Desert (Manual)", Callback = startDesert })
DesertTab:CreateToggle({
    Name = "Stand in the Middle (InfDesert)",
    CurrentValue = false,
    Flag = "StandDesertFlag",
    Callback = function(v)
        standDesertEnabled = v
        if v then safeStandAt(desertCFrame) end
    end
})
DesertTab:CreateToggle({
    Name = "Auto-Restart (on Portal Destroyed)",
    CurrentValue = false,
    Flag = "AutoRestartDesertFlag",
    Callback = function(v) autoRestartDesert = v end
})
DesertTab:CreateToggle({
    Name = "Wave Speed 2",
    CurrentValue = false,
    Flag = "WaveSpeed2DesertFlag",
    Callback = function(v)
        if v then
            waveSpeed2DesertEnabled = true
            waveSpeed3DesertEnabled = false
            fireSafe({ { { Speed = 2, Event = "InfiniteModeAction", Action = "SpeedUp" }, "\014" } })
        end
    end
})
DesertTab:CreateToggle({
    Name = "Wave Speed 3",
    CurrentValue = false,
    Flag = "WaveSpeed3DesertFlag",
    Callback = function(v)
        if v then
            waveSpeed3DesertEnabled = true
            waveSpeed2DesertEnabled = false
            fireSafe({ { { Speed = 3, Event = "InfiniteModeAction", Action = "SpeedUp" }, "\014" } })
        end
    end
})

-- ========== InfLab (non toccato, gi√† funzionante) ==========
-- [Mantieni la tua versione attuale di InfLab qui senza modifiche]

-- ========== Boss Rush ==========
local function startBossRush()
    fireSafe({ { { Event = "BossRushAction", Action = "Create" }, "\015" } })
    task.wait(1)
    fireSafe({ { { Dungeon = 3604563306, Action = "Start", Diff = "Easy", Event = "BossRushAction" }, "\015" } })
    task.wait(1)
    if standBossRushEnabled then safeStandAt(bossRushCFrame) end
end

BossRushTab:CreateButton({
    Name = "Start Boss Rush (Manual)",
    Callback = startBossRush
})

BossRushTab:CreateToggle({
    Name = "Stand in the Middle (BossRush)",
    CurrentValue = false,
    Flag = "StandBossRushFlag",
    Callback = function(v)
        standBossRushEnabled = v
        if v then safeStandAt(bossRushCFrame) end
    end
})

-- ========== Misc ==========
local autoClickEnabled, arlecchinoKeyEnabled = false, false

MiscTab:CreateToggle({
    Name = "Auto Click",
    CurrentValue = false,
    Flag = "AutoClickFlag",
    Callback = function(v)
        autoClickEnabled = v
        if v then
            task.spawn(function()
                local WeaponsModule = require(ReplicatedStorage.SharedModules.WeaponsModule)
                while autoClickEnabled do
                    task.wait(0.1)
                    pcall(function() WeaponsModule.Click({KeyCode = Enum.KeyCode.ButtonX}, false, nil, true) end)
                end
            end)
        end
    end
})

MiscTab:CreateToggle({
    Name = "Arlecchino Key",
    CurrentValue = false,
    Flag = "ArlecchinoKeyFlag",
    Callback = function(v)
        arlecchinoKeyEnabled = v
        if v then
            task.spawn(function()
                while arlecchinoKeyEnabled do
                    fireSafe({ { { Event = "CraftItem", Name = "HLKeyBeru" }, "\r" } })
                    task.wait(3)
                end
            end)
        end
    end
})

-- ========== Auto Restart ==========
dataRemoteEvent.OnClientEvent:Connect(function(...)
    local args = {...}
    local function check(tbl)
        for k,v in pairs(tbl) do
            if type(v) == "table" then check(v)
            elseif k == "Message" and type(v) == "string" and v:upper():find("PORTAL DESTROYED") then
                if autoRestartCastle then restartCastle() end
                if autoRestartDesert then restartDesert() end
            end
        end
    end
    for _,v in ipairs(args) do check(v) end
end)

Rayfield:LoadConfiguration("InfiniteModesHub")
