local Rayfield = loadstring(game:HttpGet("https://sirius.menu/rayfield"))()
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")
local player = Players.LocalPlayer
local dataRemoteEvent = ReplicatedStorage:WaitForChild("BridgeNet2"):WaitForChild("dataRemoteEvent")

local castleCFrame = CFrame.new(432.6329, 4384.6372, -1898.6741)
local desertCFrame = CFrame.new(463.8988, 4383.7646, -1888.2440)

local Window = Rayfield:CreateWindow({
    Name = "xnxsmoke Hub",
    LoadingTitle = "xnxsmoke Loader",
    LoadingSubtitle = "by xnxsmoke",
    ConfigurationSaving = { Enabled = true, FileName = "InfiniteModesHub", AutoSave = true },
})

local CastleTab = Window:CreateTab("InfCastle", 4483362458)
local DesertTab = Window:CreateTab("InfDesert", 4483362458)
local LabTab = Window:CreateTab("InfLab", 4483362458)
local MiscTab = Window:CreateTab("Misc", 4483362458)

-- =================== Variabili ===================
local standCastleEnabled = false
local standDesertEnabled = false
local autoRestartCastle = false
local autoRestartDesert = false
local autoClickEnabled = false
local waveSpeed2DesertEnabled = false
local waveSpeed3DesertEnabled = false

local autoRestartLabyrinth = false
local speed1LabyrinthEnabled = false
local speed2LabyrinthEnabled = false
local speed3LabyrinthEnabled = false

-- =================== Funzioni Utility ===================
local function safeStandAt(cf)
    local char = player.Character
    if char and char:FindFirstChild("HumanoidRootPart") then
        pcall(function() char.HumanoidRootPart.CFrame = cf end)
    end
end

local function fireSafe(args)
    pcall(function() dataRemoteEvent:FireServer(unpack(args)) end)
end

local function safeRejoin(joinFunction)
    task.spawn(function()
        local success = false
        local attempts = 0
        while not success and attempts < 5 do
            attempts += 1
            local delayTime = math.random(3,6)
            print("[AutoRejoin] Tentativo #" .. attempts .. ", attendo " .. delayTime .. " secondi prima del join")
            task.wait(delayTime)
            local ok, err = pcall(joinFunction)
            if ok then
                print("[AutoRejoin] Join completato!")
                success = true
            else
                warn("[AutoRejoin] Errore nel join: ".. tostring(err))
            end
        end
        if not success then
            warn("[AutoRejoin] Non sono riuscito a riconnettermi dopo 5 tentativi.")
        end
    end)
end

-- =================== InfCastle ===================
local function startCastle()
    fireSafe({ { { Event = "InfiniteCastleAction", Action = "Create" }, "\014" } })
    task.wait(1)
    fireSafe({ { { Dungeon = 3604563306, Event = "InfiniteCastleAction", Action = "Start" }, "\014" } })
    task.wait(1)
    if standCastleEnabled then
        safeStandAt(castleCFrame)
    end
end

local function restartCastle()
    safeRejoin(startCastle)
end

CastleTab:CreateButton({ Name = "Start Infinite Castle (Manual)", Callback = startCastle })
CastleTab:CreateToggle({
    Name = "Stand in the Middle (InfCastle)",
    CurrentValue = false,
    Flag = "StandCastleFlag",
    Callback = function(Value)
        standCastleEnabled = Value
        if Value then safeStandAt(castleCFrame) end
    end
})
CastleTab:CreateToggle({
    Name = "Auto-Restart (on Portal Destroyed)",
    CurrentValue = false,
    Flag = "AutoRestartCastleFlag",
    Callback = function(Value) autoRestartCastle = Value end
})
CastleTab:CreateToggle({
    Name = "Wave Speed 3",
    CurrentValue = false,
    Flag = "WaveSpeed3Flag",
    Callback = function(Value)
        if Value then
            task.spawn(function()
                repeat task.wait(0.1) until player.Character and player.Character:FindFirstChild("HumanoidRootPart")
                task.wait(5)
                fireSafe({ { { Speed = 3, Event = "InfiniteCastleAction", Action = "SpeedUp" }, "\014" } })
            end)
        end
    end
})

-- =================== InfDesert ===================
local function startDesert()
    fireSafe({ { { Event = "InfiniteModeAction", Action = "Create" }, "\014" } })
    task.wait(1)
    fireSafe({ { { Dungeon = 3604563306, Event = "InfiniteModeAction", Action = "Start" }, "\014" } })
end

local function restartDesert()
    safeRejoin(startDesert)
end

DesertTab:CreateButton({ Name = "Start Infinite Desert (Manual)", Callback = startDesert })
DesertTab:CreateToggle({
    Name = "Stand in the Middle (InfDesert)",
    CurrentValue = false,
    Flag = "StandDesertFlag",
    Callback = function(Value)
        standDesertEnabled = Value
        if Value then safeStandAt(desertCFrame) end
    end
})
DesertTab:CreateToggle({
    Name = "Auto-Restart (on Portal Destroyed)",
    CurrentValue = false,
    Flag = "AutoRestartDesertFlag",
    Callback = function(Value) autoRestartDesert = Value end
})
DesertTab:CreateToggle({
    Name = "Wave Speed 2",
    CurrentValue = false,
    Flag = "WaveSpeed2DesertFlag",
    Callback = function(Value)
        waveSpeed2DesertEnabled = Value
        if Value then
            waveSpeed3DesertEnabled = false
            Rayfield.Flags["WaveSpeed3DesertFlag"].Set(false)
            task.spawn(function()
                repeat task.wait(0.1) until player.Character and player.Character:FindFirstChild("HumanoidRootPart")
                task.wait(5)
                fireSafe({ { { Speed = 2, Event = "InfiniteModeAction", Action = "SpeedUp" }, "\014" } })
            end)
        end
    end
})
DesertTab:CreateToggle({
    Name = "Wave Speed 3",
    CurrentValue = false,
    Flag = "WaveSpeed3DesertFlag",
    Callback = function(Value)
        waveSpeed3DesertEnabled = Value
        if Value then
            waveSpeed2DesertEnabled = false
            Rayfield.Flags["WaveSpeed2DesertFlag"].Set(false)
            task.spawn(function()
                repeat task.wait(0.1) until player.Character and player.Character:FindFirstChild("HumanoidRootPart")
                task.wait(5)
                fireSafe({ { { Speed = 3, Event = "InfiniteModeAction", Action = "SpeedUp" }, "\014" } })
            end)
        end
    end
})

-- =================== InfLab ===================
local function startLabyrinth()
    fireSafe({ { { Event = "InfiniteLabyrinthAction", Action = "Create" }, "\014" } })
    task.wait(1)
    fireSafe({ { { Dungeon = 3604563306, Event = "InfiniteLabyrinthAction", Action = "Start" }, "\014" } })
end

local function restartLabyrinth()
    safeRejoin(startLabyrinth)
end

LabTab:CreateButton({
    Name = "Start Infinite Labyrinth (Manual)",
    Callback = startLabyrinth
})

LabTab:CreateToggle({
    Name = "Auto-Restart (on Portal Destroyed)",
    CurrentValue = false,
    Flag = "AutoRestartLabyrinthFlag",
    Callback = function(Value)
        autoRestartLabyrinth = Value
    end
})

LabTab:CreateToggle({
    Name = "Speed 1",
    CurrentValue = false,
    Flag = "Speed1LabyrinthFlag",
    Callback = function(Value)
        speed1LabyrinthEnabled = Value
        if Value then
            speed2LabyrinthEnabled = false
            speed3LabyrinthEnabled = false
            Rayfield.Flags["Speed2LabyrinthFlag"].Set(false)
            Rayfield.Flags["Speed3LabyrinthFlag"].Set(false)
            fireSafe({ { { Speed = 1, Event = "InfiniteLabyrinthAction", Action = "SpeedUp" }, "\014" } })
        end
    end
})

LabTab:CreateToggle({
    Name = "Speed 2",
    CurrentValue = false,
    Flag = "Speed2LabyrinthFlag",
    Callback = function(Value)
        speed2LabyrinthEnabled = Value
        if Value then
            speed1LabyrinthEnabled = false
            speed3LabyrinthEnabled = false
            Rayfield.Flags["Speed1LabyrinthFlag"].Set(false)
            Rayfield.Flags["Speed3LabyrinthFlag"].Set(false)
            fireSafe({ { { Speed = 2, Event = "InfiniteLabyrinthAction", Action = "SpeedUp" }, "\014" } })
        end
    end
})

LabTab:CreateToggle({
    Name = "Speed 3",
    CurrentValue = false,
    Flag = "Speed3LabyrinthFlag",
    Callback = function(Value)
        speed3LabyrinthEnabled = Value
        if Value then
            speed1LabyrinthEnabled = false
            speed2LabyrinthEnabled = false
            Rayfield.Flags["Speed1LabyrinthFlag"].Set(false)
            Rayfield.Flags["Speed2LabyrinthFlag"].Set(false)
            fireSafe({ { { Speed = 3, Event = "InfiniteLabyrinthAction", Action = "SpeedUp" }, "\014" } })
        end
    end
})

-- =================== Misc ===================
local autoClickEnabled = false
local arlecchinoKeyEnabled = false

MiscTab:CreateToggle({
    Name = "Auto Click",
    CurrentValue = false,
    Flag = "AutoClickFlag",
    Callback = function(Value)
        autoClickEnabled = Value
        if Value then
            task.spawn(function()
                local WeaponsModule = require(game:GetService("ReplicatedStorage").SharedModules.WeaponsModule)
                while autoClickEnabled do
                    task.wait(0.1)
                    pcall(function()
                        WeaponsModule.Click({KeyCode = Enum.KeyCode.ButtonX}, false, nil, true)
                    end)
                end
            end)
        end
    end
})

MiscTab:CreateToggle({
    Name = "Arlecchino Key",
    CurrentValue = false,
    Flag = "ArlecchinoKeyFlag",
    Callback = function(Value)
        arlecchinoKeyEnabled = Value
        if Value then
            task.spawn(function()
                local dataEvent = game:GetService("ReplicatedStorage"):WaitForChild("BridgeNet2"):WaitForChild("dataRemoteEvent")
                while arlecchinoKeyEnabled do
                    local args = {
                        {
                            {
                                Event = "CraftItem",
                                Name = "HLKeyBeru"
                            },
                            "\r"
                        }
                    }
                    pcall(function()
                        dataEvent:FireServer(unpack(args))
                    end)
                    task.wait(3)
                end
            end)
        end
    end
})

-- =================== Teleport on Respawn ===================
player.CharacterAdded:Connect(function()
    task.wait(1)
    if standCastleEnabled then safeStandAt(castleCFrame) end
    if standDesertEnabled then safeStandAt(desertCFrame) end
end)

-- =================== Auto-Restart Portal Destroy ===================
dataRemoteEvent.OnClientEvent:Connect(function(...)
    local args = {...}
    local function recursiveCheck(tbl)
        if type(tbl) ~= "table" then return end
        for k, v in pairs(tbl) do
            if type(v) == "table" then
                recursiveCheck(v)
            elseif k == "Message" and type(v) == "string" then
                local msg = v:upper()
                if msg:find("PORTAL DESTROYED") then
                    if autoRestartCastle then restartCastle() end
                    if autoRestartDesert then restartDesert() end
                    if autoRestartLabyrinth then restartLabyrinth() end
                end
            end
        end
    end
    for _, v in ipairs(args) do recursiveCheck(v) end
end)

Rayfield:LoadConfiguration("InfiniteModesHub")
