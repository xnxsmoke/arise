local Rayfield = loadstring(game:HttpGet("https://sirius.menu/rayfield", true))()
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")
local player = Players.LocalPlayer
local dataRemoteEvent = ReplicatedStorage:WaitForChild("BridgeNet2"):WaitForChild("dataRemoteEvent")
local castleCFrame = CFrame.new(432.6329, 4384.6372, -1898.6741)
local desertCFrame = CFrame.new(463.8988, 4383.7646, -1888.2440)
local standCastleEnabled, standDesertEnabled = false, false
local autoRestartCastle, autoRestartDesert = false, false
local autoClickEnabled = false
local Window = Rayfield:CreateWindow({Name="xnxsmoke Hub", LoadingTitle="Loader", LoadingSubtitle="by xnxsmoke", ConfigurationSaving={Enabled=true, FileName="InfiniteModesHub", AutoSave=true}})
local CastleTab = Window:CreateTab("InfCastle", 4483362458)
local DesertTab = Window:CreateTab("InfDesert", 4483362458)
local MiscTab = Window:CreateTab("Misc", 4483362458)

local function safeStandAt(cf)
    local char = player.Character
    if char and char:FindFirstChild("HumanoidRootPart") then
        pcall(function() char.HumanoidRootPart.CFrame = cf end)
    end
end

local function fireSafe(args)
    pcall(function() dataRemoteEvent:FireServer(unpack(args)) end)
end

local function startCastle()
    fireSafe({{{Event="InfiniteCastleAction", Action="Create"}, "\r"}})
    task.wait(1)
    fireSafe({{{Dungeon=3604563306, Event="InfiniteCastleAction", Action="Start"}, "\r"}})
    task.wait(1)
    if standCastleEnabled then safeStandAt(castleCFrame) end
end

local function restartCastle()
    fireSafe({{{Event="InfiniteCastleAction", Action="Leave"}, "\r"}})
    task.wait(1.5)
    startCastle()
end

CastleTab:CreateButton({Name="Start Infinite Castle (Manual)", Callback=startCastle})
CastleTab:CreateToggle({
    Name="Stand in the Middle (InfCastle)",
    CurrentValue=false,
    Flag="StandCastleFlag",
    Callback=function(Value)
        standCastleEnabled = Value
        if Value then
            safeStandAt(castleCFrame)
            task.spawn(function()
                task.wait(1)
                local dropdownValue = Rayfield:GetFlag("CastleSpeedDropdown") or "1"
                local speed = tonumber(dropdownValue)
                local args = {
                    {
                        {
                            Speed = speed,
                            Event = "InfiniteCastleAction",
                            Action = "SpeedUp"
                        },
                        "\r"
                    }
                }
                fireSafe(args)
            end)
        end
    end
})

CastleTab:CreateToggle({Name="Auto-Restart", CurrentValue=false, Flag="AutoRestartCastleFlag", Callback=function(Value) autoRestartCastle=Value end})

CastleTab:CreateDropdown({
    Name = "Wave Speed",
    Options = {"1","2","3"},
    CurrentOption = "1",
    Flag = "CastleSpeedDropdown",
    Callback=function() end
})

local function startDesert()
    fireSafe({{{Event="InfiniteModeAction", Action="Create"}, "\r"}})
    task.wait(1)
    fireSafe({{{Dungeon=3604563306, Event="InfiniteModeAction", Action="Start"}, "\r"}})
    task.wait(1)
    if standDesertEnabled then safeStandAt(desertCFrame) end
end

local function restartDesert()
    fireSafe({{{Event="InfiniteModeAction", Action="Leave"}, "\r"}})
    task.wait(1.5)
    startDesert()
end

DesertTab:CreateButton({Name="Start Infinite Desert (Manual)", Callback=startDesert})
DesertTab:CreateToggle({Name="Stand in the Middle (InfDesert)", CurrentValue=false, Flag="StandDesertFlag", Callback=function(Value) standDesertEnabled=Value if Value then safeStandAt(desertCFrame) end end})
DesertTab:CreateToggle({Name="Auto-Restart", CurrentValue=false, Flag="AutoRestartDesertFlag", Callback=function(Value) autoRestartDesert=Value end})

MiscTab:CreateToggle({Name="Auto Click", CurrentValue=false, Flag="AutoClickMisc", Callback=function(Value) autoClickEnabled=Value end})

player.CharacterAdded:Connect(function()
    task.wait(1)
    if standCastleEnabled then safeStandAt(castleCFrame) end
    if standDesertEnabled then safeStandAt(desertCFrame) end
end)

dataRemoteEvent.OnClientEvent:Connect(function(...)
    local args={...}
    local function recursiveCheck(tbl)
        if type(tbl)~="table" then return end
        for k,v in pairs(tbl) do
            if type(v)=="table" then recursiveCheck(v)
            elseif k=="Message" and type(v)=="string" then
                if v:upper():find("PORTAL DESTROYED") then
                    if autoRestartCastle then task.spawn(restartCastle) end
                    if autoRestartDesert then task.spawn(restartDesert) end
                end
            end
        end
    end
    for _,v in ipairs(args) do recursiveCheck(v) end
end)

spawn(function()
    repeat task.wait(0.1) until player:GetAttribute("Loaded")==true
    local WeaponsModule
    pcall(function() WeaponsModule=require(ReplicatedStorage:WaitForChild("SharedModules"):WaitForChild("WeaponsModule")) end)
    while true do
        if autoClickEnabled and WeaponsModule then
            pcall(function() WeaponsModule.Click({KeyCode=Enum.KeyCode.ButtonX}, false, nil, true) end)
            task.wait(0.1)
        else
            task.wait(0.2)
        end
    end
end)

Rayfield:LoadConfiguration("InfiniteModesHub")
